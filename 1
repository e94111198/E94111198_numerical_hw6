def gaussian_elimination(matrix):
    n = len(matrix)

    # Forward elimination with partial pivoting
    for i in range(n):
        # Pivot selection
        max_row = max(range(i, n), key=lambda r: abs(matrix[r][i]))
        matrix[i], matrix[max_row] = matrix[max_row], matrix[i]

        for j in range(i + 1, n):
            factor = matrix[j][i] / matrix[i][i]
            for k in range(i, n + 1):
                matrix[j][k] -= factor * matrix[i][k]

    # Back substitution
    x = [0 for _ in range(n)]
    for i in range(n - 1, -1, -1):
        x[i] = matrix[i][n]
        for j in range(i + 1, n):
            x[i] -= matrix[i][j] * x[j]
        x[i] /= matrix[i][i]

    return x

# 增廣矩陣（每列加一欄為等號右邊常數）
aug_matrix = [
    [1.19, 2.11, -100, 1, 1.12],
    [14.2, -0.112, 12.2, -1, 3.44],
    [0, 100, -99.9, 1, 2.15],
    [15.3, 0.110, -13.1, -1, 4.16]
]

solution = gaussian_elimination(aug_matrix)
print("解為：", solution)
